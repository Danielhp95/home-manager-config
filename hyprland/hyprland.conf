# Welcome to my hyprland.conf!
exec-once = /nix/store/f9w2kp8y55zvcyz33b5lnr7qwhx652y8-dbus-1.14.10/bin/dbus-update-activation-environment --systemd DISPLAY HYPRLAND_INSTANCE_SIGNATURE WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
# General / Miscelaneous {{{

# TODO: what do we do if there's no pywal generated colors
source = ~/.cache/wal/colors-hyprland.conf

misc {
  disable_hyprland_logo = true
  exit_window_retains_fullscreen = true # If closing a full screen window, make the next active one full screen too
}

general {
  layout = hy3

  border_size = 5
  # col.active_border = 0xffb072d1 0xffb072d1 190  # Does not work
  resize_on_border = true
  col.active_border = $color1 $color3 $color1 90deg
  col.inactive_border = $color6
  gaps_in = 5
  gaps_out = 10
  sensitivity = 1
}

input {
  follow_mouse = 1
  kb_layout = us
  kb_options = caps:escape
  sensitivity = 0 # -1.0 - 1.0, 0 means no modification.
  touchpad {
    clickfinger_behavior = true # 2 finger right click
    drag_lock = true # can remove finger for a short time while dragging
    natural_scroll = no
    disable_while_typing = true
  }
}

# gestures {
#  workspace_swipe = on
#  workspace_swipe_distance = 600 # (default is 300)
# }
# }}}
# Monitors {{{

# No preference
# monitor =,preferred,auto,auto  # In case nothing else works

# Home setup: Denver
monitor=eDP-1, preferred, 1341x1440, 1
monitor=DP-2, preferred, 2560x0, 1
monitor=DP-1, preferred, 2560x0, 1
monitor=HDMI-A-1, preferred, 0x0, 1

workspace= 1, monitor:HDMI-A-1
workspace= 2, monitor:DP-1
workspace= 2, monitor:DP-2
workspace= 9, monitor:eDP-1
# }}}
# Envs {{{
# As per https://wiki.hyprland.org/Nvidia/
# To get multi monitor working
env = LIBVA_DRIVER_NAME,nvidia
# env = GBM_BACKEND,nvidia-drm  # crashes firefox
env = __GLX_VENDOR_LIBRARY_NAME,nvidia
env = WLR_NO_HARDWARE_CURSORS,1  # see if this helps cursor issue

# Which GPU to run Hyprland on. To find card names: ls -l /dev/dri/by-path
# env = WLR_DRM_DEVICES, /dev/dri/card0:/dev/dri/card1  # Try amdgpu, otherwise NVIDIA
# env = WLR_DRM_DEVICES, /dev/dri/card0: # amdgpu only. Makes HDMI not accessible :(
# }}}
# Execs {{{
exec-once = fcitx5
exec-once = pypr # begins pypr
exec-once = hyprctl dispatch workspace 2 # Start on terminal workspace

# # make sure you have the right environment variables in wayland (TODO: better way to do this?)
exec-once = systemctl --user import-environment DISPLAY WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
# exec-once = systemctl --user restart waybar
exec-once = ags

# Touchpad gestures
# exec-once = libinput-gestures &

exec-once = swww-daemon && sleep 0.1
exec-once = swww img ~/nix_config/wallpapers/fox_in_the_woods.jpg
# TODO: FIX
# exec-once = swww-daemon && swww-randomise -i 0 ~/nix_config/wallpapers
# exec-once = sleep 300 && swww-randomise -i 300 -f 360 -s 2 ~/nix_config/wallpapers

# exec-once = swaync  # previously, mako / dunst # Currently: ags
# }}}
# Decoration {{{

$opacity = 0.80
$inactive_opacity = 0.7

decoration {
  active_opacity = $opacity

  col.shadow = $color2

  drop_shadow = false
  fullscreen_opacity = $opacity
  inactive_opacity = $inactive_opacity
  rounding = 5
  shadow_range = 10
  shadow_render_power = 2
  blur {
    enabled = yes
    size = 10
    passes = 5
    new_optimizations = 1
    ignore_opacity = true
  }
}
# }}}
# Animations {{{
animations {
  enabled = yes

  # Some default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more
  bezier = myBezier, 0.05, 0.9, 0.1, 1.05
  animation = windows, 1, 7, myBezier
  animation = windowsOut, 1, 7, default, popin 80%
  animation = border, 1, 10, default
  animation = borderangle, 1, 8, default
  animation = fade, 1, 7, default
  animation = workspaces, 1, 6, default

  # bezier=smoothOut, 0.36, 0, 0.66, -0.56
  # bezier=smoothIn, 0.25, 1, 0.5, 1
  # bezier=overshot, 0.4,0.8,0.2,1.2
  # animation=border, 1, 2, smoothIn
  # animation=fade, 1, 4, smoothOut
  # animation=windows, 1, 3, overshot, popin 80%
}
# }}}
# Binds {{{
# Bind flags
# l -> locked, aka. works also when an input inhibitor (e.g. a lockscreen) is active.
# r -> release, will trigger on release of a key.
# e -> repeat, will repeat when held.
# n -> non-consuming, key/mouse events will be passed to the active window in addition to triggering the dispatcher.
# m -> mouse
# t -> transparent, cannot be shadowed by other binds.
# i -> ignore mods, will ignore modifiers.

binds {
  workspace_back_and_forth = true
  allow_workspace_cycles = true
}

$mainMod = SUPER
# bind = $mainMod, Return, exec, wezterm start
bind = $mainMod, Return, exec, kitty
bind = $mainMod SHIFT, R, exec, hyprctl reload
bind = $mainMod CONTROL SHIFT, A, exec, pkill ags && ags

# Lock screen when closing laptop lid
bindl=,switch:off:Lid Switch, exec, hyprlock --immediate

# Utilities {{{
bind = $mainMod, D, exec, rofi -show drun run
bind = $mainMod SHIFT, B, exec, bash /home/daniel/nix_config/menu_launchers/scripts/choose_bluetooth_device_from_paired.sh
bind = $mainMod SHIFT, P, exec, bash /home/daniel/nix_config/menu_launchers/scripts/open_paper.sh
bind = $mainMod SHIFT, S, exec, grimblast copy area
bind = $mainMod SHIFT, N, exec, swaync-client --open-panel
bind = $mainMod SHIFT, H, exec, swaync-client --toggle-dnd  # "H" As in, hush
bind = $mainMod SHIFT, R, exec, bash /home/daniel/.config/ags/scripts/record-script.sh
bind = $mainMod+CONTROL+SHIFT, R, exec, bash /home/daniel/.config/ags/scripts/record-script.sh --fullscreen
bind = $mainMod+SHIFT, S, exec, hyprshot --freeze --mode=region --raw --clipboard-only | satty -f - --copy-command wl-copy --early-exit
# }}}
# eww {{{
# bind = $mainMod SHIFT, m, exec, eww open system-menu --toggle
# bind = $mainMod SHIFT, escape, exec, eww open power-menu --toggle
# }}}
# Normal workspaces {{{
bind = $mainMod, Space, togglefloating

bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, TAB, workspace, previous

bind = $mainMod SHIFT, 1, hy3:movetoworkspace, 1, follow
bind = $mainMod SHIFT, 2, hy3:movetoworkspace, 2, follow
bind = $mainMod SHIFT, 3, hy3:movetoworkspace, 3, follow
bind = $mainMod SHIFT, 4, hy3:movetoworkspace, 4, follow
bind = $mainMod SHIFT, 5, hy3:movetoworkspace, 5, follow
bind = $mainMod SHIFT, 6, hy3:movetoworkspace, 6, follow
bind = $mainMod SHIFT, 7, hy3:movetoworkspace, 7, follow
bind = $mainMod SHIFT, 8, hy3:movetoworkspace, 8, follow
bind = $mainMod SHIFT, 9, hy3:movetoworkspace, 9, follow

bind = $mainMod, comma, workspace,e-1
bind = $mainMod, period, workspace, e+1

bind = $mainMod, h, hy3:movefocus, left
bind = $mainMod, j, hy3:movefocus, down
bind = $mainMod, k, hy3:movefocus, up
bind = $mainMod, l, hy3:movefocus, right
bind = $mainMod, left, hy3:movefocus, left
bind = $mainMod, right, hy3:movefocus, right
bind = $mainMod, down, hy3:movefocus, down
bind = $mainMod, up, hy3:movefocus, up

bind = $mainMod SHIFT, h, hy3:movewindow, left
bind = $mainMod SHIFT, j, hy3:movewindow, down
bind = $mainMod SHIFT, k, hy3:movewindow, up
bind = $mainMod SHIFT, l, hy3:movewindow, right

bind = $mainMod SHIFT, u, hy3:changefocus, raise
bind = $mainMod SHIFT, d, hy3:changefocus, lower
bind = $mainMod SHIFT, r, hy3:changefocus, bottom

# TODO: does not work
bind = $mainMod, s, hy3:setswallow, toggle

bind = $mainMod, t, hy3:changegroup, toggletab
bind = $mainMod, g, hy3:makegroup, tab

bind = $mainMod SHIFT, Q, hy3:killactive,

bind = $mainMod, E, togglesplit, # Change between horizontal / vertical current splits
bind = $mainMod, F, fullscreen
bind = $mainMod, O, toggleopaque
# }}}
# Special workspaces {{{
bind = $mainMod, Minus, togglespecialworkspace
bind = $mainMod, N, togglespecialworkspace, logseq

# TODO: get this for something you want
windowrule = workspace special:logseq, title:^(Logseq)$
windowrule = animation popin, title:^(Logseq)$
windowrule = size 1403 898, title:^(Logseq)$
windowrule = move 8 39, title:^(Logseq)$
windowrule = float, title:^(Logseq)$
# }}}
# Mouse {{{
bindn = , mouse:272, hy3:focustab, mouse
bindm = $mainMod, mouse:272, movewindow
# }}}
# Resize / Move window {{{
bind = $mainMod , R, submap, resize
submap = resize
binde =, right, resizeactive, 15 0
binde =, left, resizeactive, -15 0
binde =, up, resizeactive, 0 -15
binde =, down, resizeactive, 0 15
binde =, l, resizeactive, 15 0
binde =, h, resizeactive, -15 0
binde =, k, resizeactive, 0 -15
binde =, j, resizeactive, 0 15
bind = , escape, submap, reset
submap = reset

bind = $mainMod, M, submap, move
submap = move
binde = , left, moveactive, -40 0
binde = , up, moveactive, 40 0
binde = , down, moveactive, 0 -40
binde = , right, moveactive, 0 40
binde = , h, moveactive, -40 0
binde = , l, moveactive, 40 0
binde = , k, moveactive, 0 -40
binde = , j, moveactive, 0 40
bind = , escape, submap, reset
submap = reset
# }}}
# Volume / Brighness {{{
binde = $mainMod, F2, exec, brightnessctl set 5%-
binde = $mainMod SHIFT, F2, exec, brightnessctl set 1%
binde = $mainMod, F3, exec, brightnessctl set +5%
binde = $mainMod SHIFT, F3, exec, brightnessctl set 100%
binde = $mainMod, F6, exec, pw-volume change -5%
binde = $mainMod, F7, exec, pw-volume change +5%
bind = $mainMod, F5, exec, pw-volume mute toggle
bind = $mainMod, XF86AudioNext, exec, playerctl next
bind = $mainMod, XF86AudioPlay, exec, playerctl play-pause
bind = $mainMod, XF86AudioPrev, exec, playerctl previous
# }}}
# }}}
# layout: dwindle {{{
dwindle {
  preserve_split = yes # you probably want this
  pseudotile = yes # master switch for pseudotiling.
}
# }}}
# layout: hy3 (Plugin) {{{
plugin {
  hy3 {
    # disable gaps when only one window is onscreen
    no_gaps_when_only = true

    # policy controlling what happens when a node is removed from a group,
    # leaving only a group
    # 0 = remove the nested group
    # 1 = keep the nested group
    # 2 = keep the nested group only if its parent is a tab group
    node_collapse_policy = 2

    # offset from group split direction when only one window is in a group
    group_inset = 10

    # if a tab group will automatically be created for the first window spawned in a workspace
    tab_first_window = false

    # tab group settings
    tabs {
      # height of the tab bar
      height = 20

      # padding between the tab bar and its focused node
      padding = 5

      # the tab bar should animate in/out from the top instead of below the window
      from_top = false

      # rounding of tab bar corners
      rounding = 5

      # render the window title on the bar
      render_text = true

      # center the window title
      text_center = true

      # font to render the window title with
      text_font = FiraCode Nerd Font Mono Bold

      # height of the window title
      text_height = 12

      # left padding of the window title
      text_padding = 0

      # active tab bar segment color
      col.active = $color2

      # urgent tab bar segment color
      col.urgent = $color3

      # inactive tab bar segment color
      col.inactive = $background

      # active tab bar text color
      col.text.active = $background

      # urgent tab bar text color
      col.text.urgent = 0xff000000

      # inactive tab bar text color
      col.text.inactive = $foreground
    }

    # autotiling settings
    autotile {
      # enable autotile
      enable = true

      # make autotile-created groups ephemeral
      ephemeral_groups = true

      # if a window would be squished smaller than this width, a vertical split will be created
      # -1 = never automatically split vertically
      # 0 = always automatically split vertically
      # <number> = pixel height to split at
      trigger_width = 0

      # if a window would be squished smaller than this height, a horizontal split will be created
      # -1 = never automatically split horizontally
      # 0 = always automatically split horizontally
      # <number> = pixel height to split at
      trigger_height = 0

      # a space or comma separated list of workspace ids where autotile should be enabled
      # it's possible to create an exception rule by prefixing the definition with "not:"
      # workspaces = 1,2 # autotiling will only be enabled on workspaces 1 and 2
      # workspaces = not:1,2 # autotiling will be enabled on all workspaces except 1 and 2
      workspaces = not:$messaging_apps  # Don't tile where I keep my messaging apps
    }
  }
}
# }}}
# hyconv (Plugin) {{{
# bind key to toggle overview (normal)
# bind = ALT,tab,hycov:toggleoverview
# 
# # bind key to toggle overview (shows all windows in one monitor, not affected by `only_active_workspace` or `only_active_monitor`)
# bind = ALT,g,hycov:toggleoverview,forceallinone
# 
# # The key binding for directional switch mode.
# # Calculate the window closest to the direction to switch focus.
# # This keybind is applicable not only to the overview, but also to the general layout.
# 
# # if you want that focusmove can cross monitor, use this
# bind=ALT,left,hycov:movefocus,leftcross
# bind=ALT,right,hycov:movefocus,rightcross
# bind=ALT,up,hycov:movefocus,upcross
# bind=ALT,down,hycov:movefocus,downcross
# 
# bind=ALT,h,hycov:movefocus,leftcross
# bind=ALT,l,hycov:movefocus,rightcross
# bind=ALT,k,hycov:movefocus,upcross
# bind=ALT,j,hycov:movefocus,downcross
# 
# plugin {
#     hycov {
#         overview_gappo = 60 # gaps width from screen edge
#         overview_gappi = 24 # gaps width from clients
#         enable_hotarea = 0 # enable mouse cursor hotarea, when cursor enter hotarea, it will toggle overview
#         hotarea_monitor = all # monitor name which hotarea is in, default is all
#         hotarea_pos = 1 # position of hotarea (1: bottom left, 2: bottom right, 3: top left, 4: top right)
#         hotarea_size = 10 # hotarea size, 10x10
#         # swipe_fingers = 3 # finger number of gesture,move any directory
#         move_focus_distance = 100 # distance for movefocus,only can use 3 finger to move 
#         enable_gesture = 0 # enable gesture
#         auto_exit = 1 # enable auto exit when no client in overview
#         auto_fullscreen = 0 # auto make active window maximize after exit overview
#         only_active_workspace = 0 # only overview the active workspace
#         only_active_monitor = 0 # only overview the active monitor
#         enable_alt_release_exit = 1 # alt swith mode arg,see readme for detail
#         alt_replace_key = Alt_L # alt swith mode arg,see readme for detail
#         alt_toggle_auto_next = 1 # auto focus next window when toggle overview in alt swith mode
#         click_in_cursor = 1 # when click to jump,the target windwo is find by cursor, not the current foucus window.
#         hight_of_titlebar = 0 # height deviation of title bar height
#     }
# }
#}}}
# hyprexpo (Plugin) {{{
plugin {
    hyprexpo {
        columns = 3
        gap_size = 10
        bg_col = rgb(111111)
        workspace_method = first 1 # [center/first] [workspace] e.g. first 1 or center m+1

        enable_gesture = true # laptop touchpad
        gesture_fingers = 4  # 3 or 4
        gesture_distance = 230 # how far is the "max"
        gesture_positive = true # positive = swipe down. Negative = swipe up.
    }
}
# }}}
# Pypr (Plugins){{{
# Magnify plugin
bind = $mainMod CTRL, Z, exec, pypr zoom --0.5
bind = $mainMod SHIFT, Z, exec, pypr zoom ++0.5
bind = $mainMod, Z, exec, pypr zoom  # Toggle zoom

# Scratchpad plugin
windowrulev2 = float, opacity 1.0 override 1.0 override, class:{pypr_scratchpad}
bind = $mainMod SHIFT, F, exec, pypr toggle filemanager && hyprctl dispatch bringactivetotop
bind = $mainMod SHIFT, T, exec, pypr toggle terminal && hyprctl dispatch bringactivetotop
bind = $mainMod SHIFT, A, exec, pypr toggle pavucontrol && hyprctl dispatch bringactivetotop
# }}}
# Window Rules {{{
# Workspace specific applications
windowrulev2 = workspace 1, class:(firefox)
windowrulev2 = workspace 6, class:(steam)$
windowrulev2 = workspace 8, title:(Spotify)$
windowrulev2 = workspace 9, class:(Slack)$
windowrulev2 = workspace 9, class:(org.telegram.desktop)
windowrulev2 = workspace 9, class:(Element)

# No animations
layerrule = noanim, rofi

# Floating windows

windowrule = float, Weather
windowrule = float, io.github.amit9838.mousam
windowrulev2 = float, class:{Rofi}
windowrule = float, pavucontrol
windowrule = float, blueberry
windowrule = float, mpv
windowrule = float, imv
windowrule = float, satty
windowrulev2 = float, title:(MainPicker)  # Screensharing window selection

# Opacity configuration
windowrulev2 = opacity 1 override, 1 override, class:(org.wezfurlong.wezterm)
windowrule = opacity 1.0 override 1.0 override, Weather
windowrule = opacity 1.0 override 1.0 override, firefox
windowrule = opacity 1.0 override 1.0 override, satty
windowrule = opacity 1.0 override 1.0 override, mpv
windowrule = opacity 1.0 override 1.0 override, Zoom
windowrule = opacity 1.0 override 1.0 override, matplotlib
windowrule = opacity 1.0 override 1.0 override, pavucontrol
windowrulev2 = opacity 1.0 override 1.0 override, class:(steam_app_)(.*) # doesn't work
# }}}
# vim: set foldmethod=marker foldlevel=0:
