exec-once = /nix/store/8xanhmwi20ikas8mf0map1kjza0g78i0-dbus-1.14.10/bin/dbus-update-activation-environment --systemd DISPLAY HYPRLAND_INSTANCE_SIGNATURE WAYLAND_DISPLAY XDG_CURRENT_DESKTOP && systemctl --user stop hyprland-session.target && systemctl --user start hyprland-session.target
exec-once = /nix/store/8xanhmwi20ikas8mf0map1kjza0g78i0-dbus-1.14.10/bin/dbus-update-activation-environment --systemd DISPLAY HYPRLAND_INSTANCE_SIGNATURE WAYLAND_DISPLAY XDG_CURRENT_DESKTOP && systemctl --user stop hyprland-session.target && systemctl --user start hyprland-session.target
# Plugin


# Home setup: Denver
monitor =,preferred,auto,auto  # In case nothing else works
monitor=eDP-1, 1920x1080@144, 1341x1440, 1
monitor=DP-2, 2560x1440, 2560x0, 1
monitor=DP-1, 2560x1440, 2560x0, 1
monitor=HDMI-A-1, 2560x1440, 0x0, 1

misc {
  disable_hyprland_logo = true
}


workspace= 1, monitor:HDMI-A-1
workspace= 2, monitor:DP-1
workspace= 2, monitor:DP-2
workspace= 9, monitor:eDP-1

# Wallpaper

exec-once = swww init && sleep 0.1
exec-once = swww img ~/Pictures/hangmoon/fox_in_the_woods.jpg

# Variables
$mainMod = SUPER
$opacity = 0.9
$inactive_opacity = 0.85

# Workspace names
$browser = 1
$terminal = 2
$messaging_apps = 9
$games = 6

# Extra Pre

# # Monitors

# # Env
# env = XCURSOR_SIZE,24

# # import env
# # make sure you have the right environment variables in wayland (TODO: better way to do this?)
exec-once = systemctl --user import-environment DISPLAY WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = systemctl --user restart waybar



# ## Execs
# eww
# exec-once = eww daemon && eww open bar

# mako
exec-once = mako
exec-once = fcitx5

# swww-init
# exec-once = swww-daemon init && swww-randomise -i 0 ~/Pictures/hangmoon

# swww-randomise
# exec-once = sleep 60 && swww-randomise -i 60 -f 60 -s 2 ~/Pictures/hangmoon


# ## Group Mappings
general {
  border_size = 5
  col.active_border = 0xffb072d1
  col.inactive_border = 0xff292a37
  gaps_in = 5
  gaps_out = 10
  layout = hy3
  sensitivity = 1
}

input {
  follow_mouse = 1
  kb_layout = us
  kb_options = caps:escape
  sensitivity = 0 # -1.0 - 1.0, 0 means no modification.
  touchpad {
    # clickfinger_behavior = true # 2 finger right click
    drag_lock = true # can remove finger for a short time while dragging
    natural_scroll = no
  }
}

gestures {
  workspace_swipe = on
  workspace_swipe_distance = 600 # (default is 300)
}

decoration {
  active_opacity = $opacity
  col.shadow = rgba(1a1a1aee)
  drop_shadow = yes
  fullscreen_opacity = $opacity
  inactive_opacity = $inactive_opacity
  rounding = 5
  shadow_range = 4
  shadow_render_power = 3
  # TODO: not working
  blur {
    enabled = yes
    size = 3
    passes = 3
    new_optimizations = 1
    ignore_opacity = true
  }
}

windowrule = opacity 1.0 override 1.0 override, firefox
windowrule = opacity 1.0 override 1.0 override, mpv
windowrule = opacity 1.0 override 1.0 override, Zoom
windowrule = opacity 1.0 override 1.0 override, matplotlib
windowrulev2 = opacity 1.0 override 1.0 override, class:(steam_app_)(.*)

dwindle {
  preserve_split = yes # you probably want this
  pseudotile = yes # master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
}

master {
  new_is_master = true
}

plugin {
  hy3 {
    # disable gaps when only one window is onscreen
    no_gaps_when_only = false

    # policy controlling what happens when a node is removed from a group,
    # leaving only a group
    # 0 = remove the nested group
    # 1 = keep the nested group
    # 2 = keep the nested group only if its parent is a tab group
    node_collapse_policy = 2

    # TODO: mess with this
    # offset from group split direction when only one window is in a group
    group_inset = 10

    # if a tab group will automatically be created for the first window spawned in a workspace
    tab_first_window = true

    # tab group settings
    tabs {
      # height of the tab bar
      height = 15

      # padding between the tab bar and its focused node
      padding = 5

      # the tab bar should animate in/out from the top instead of below the window
      from_top = false

      # rounding of tab bar corners
      rounding = 3

      # render the window title on the bar
      render_text = true

      # center the window title
      text_center = true

      # font to render the window title with
      text_font = Sans

      # height of the window title
      text_height = 8

      # left padding of the window title
      text_padding = 0

      # active tab bar segment color
      col.active = 0xff32b4ff

      # urgent tab bar segment color
      col.urgent = 0xffff4f4f

      # inactive tab bar segment color
      col.inactive = 0x80808080

      # active tab bar text color
      col.text.active = 0xff000000

      # urgent tab bar text color
      col.text.urgent = 0xff000000

      # inactive tab bar text color
      col.text.inactive = 0xf0000000
    }

    # autotiling settings
    autotile {
      # enable autotile
      enabled = true

      # make autotile-created groups ephemeral
      ephemeral_groups = true

      # if a window would be squished smaller than this width, a vertical split will be created
      # -1 = never automatically split vertically
      # 0 = always automatically split vertically
      # <number> = pixel height to split at
      trigger_width = 0

      # if a window would be squished smaller than this height, a horizontal split will be created
      # -1 = never automatically split horizontally
      # 0 = always automatically split horizontally
      # <number> = pixel height to split at
      trigger_height = 0

      # a space or comma separated list of workspace ids where autotile should be enabled
      # it's possible to create an exception rule by prefixing the definition with "not:"
      # workspaces = 1,2 # autotiling will only be enabled on workspaces 1 and 2
      # workspaces = not:1,2 # autotiling will be enabled on all workspaces except 1 and 2
      workspaces = not:$messaging_apps  # Don't tile where I keep my messaging apps
    }
  }
}


# ## Animations
animations {
  enabled = yes

  # Some default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more
  bezier = myBezier, 0.05, 0.9, 0.1, 1.05
  animation = windows, 1, 7, myBezier
  animation = windowsOut, 1, 7, default, popin 80%
  animation = border, 1, 10, default
  animation = borderangle, 1, 8, default
  animation = fade, 1, 7, default
  animation = workspaces, 1, 6, default

}


# ## Binds

# # Bindings for `$mainMod`
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, D, exec, fuzzel --show-actions
bind = $mainMod SHIFT,  B, exec, bash /home/daniel/nix_config/rofi/scripts/choose_bluetooth_device_from_paired.sh
bind = $mainMod SHIFT,  P, exec, bash /home/daniel/nix_config/rofi/scripts/open_paper.sh
bind = $mainMod, E, togglesplit, # dwindle
bind = $mainMod, F, fullscreen
bind = $mainMod, Minus, togglespecialworkspace
bind = $mainMod, N, togglespecialworkspace, logseq
bind = $mainMod, O, toggleopaque
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, Return, exec, wezterm start
bind = $mainMod, Space, togglefloating
bind = $mainMod, V, togglefloating,
bind = $mainMod, W, exec, ~/.config/hypr/scripts/switch_window.nu
bind = $mainMod, Y, pin # pin to all workspaces
bind = $mainMod, comma, workspace,e-1
bind = $mainMod, down, hy3:movefocus, d
bind = $mainMod, h, hy3:movefocus, l
bind = $mainMod, j, hy3:movefocus, d
bind = $mainMod, k, hy3:movefocus, u
bind = $mainMod, l, hy3:movefocus, r
bind = $mainMod, left, hy3:movefocus, l
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1
bind = $mainMod, period, workspace, e+1
bind = $mainMod, print, exec, grim -g "$(slurp -o)" $XDG_PICTURES_DIR/screenshots//$(date +'%s_grim.png')
bind = $mainMod, right, hy3:movefocus, r
bind = $mainMod, t, hy3:makegroup, toggletab
bind = $mainMod, up, hy3:movefocus, u
# bind = $mainMod, TAB, focuscurrentorlast  # This only works for workspaces on the same monitor
bind = $mainMod, TAB, workspace, previous

# # Bindings for `$mainMod CTRL`
bind = $mainMod CTRL, h, moveintogroup, l
bind = $mainMod CTRL, j, moveintogroup, d
bind = $mainMod CTRL, k, moveintogroup, u
bind = $mainMod CTRL, l, moveintogroup, r
bind = $mainMod CTRL, o, moveoutofgroup

# # Bindings for `$mainMod SHIFT`
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, D, exec, eww open system-menu --toggle
bind = $mainMod SHIFT, I, exec, swww-randomise -i 0 ~/pictures/wallpapers
bind = $mainMod SHIFT, Minus, movetoworkspace, special
bind = $mainMod SHIFT, N, exec, /nix/store/wpck03zijqzx4b8sjfpqjylfgij0kbjw-logseq-move.nu
bind = $mainMod SHIFT, O, exec, /nix/store/dl0yb7j7yj9prhl8xkp24p8zb5077z1p-wl-ocr/bin/wl-ocr
bind = $mainMod SHIFT, P, exec, rofi-rbw
bind = $mainMod SHIFT, Q, killactive,
bind = $mainMod SHIFT, R, exec, eww close bar; hyprctl reload && eww open bar
bind = $mainMod SHIFT, Return, exec, wezterm connect unix
bind = $mainMod SHIFT, h, hy3:movewindow, l
bind = $mainMod SHIFT, j, hy3:movewindow, d
bind = $mainMod SHIFT, k, hy3:movewindow, u
bind = $mainMod SHIFT, l, hy3:movewindow, r
bind = $mainMod SHIFT, print, exec, grim -g "$(slurp)" $XDG_PICTURES_DIR/screenshots//$(date +'%s_grim.png')
bind = $mainMod SHIFT, t, lockgroups

bind = $mainMod SHIFT, S, exec, grimblast copy area



# ## Window Rules
# `KeePassXC` windowrule's
windowrule = float, KeePassXC

# `imv` windowrule's
windowrule = float, imv

# `mpv` windowrule's
windowrule = float, mpv

windowrulev2 = workspace 1, class:(firefox)
windowrulev2 = workspace 6, class:(steam)$
windowrulev2 = workspace 8, title:(Spotify)$
windowrulev2 = workspace 9, class:(Slack)$
windowrulev2 = workspace 9, class:(org.telegram.desktop)
windowrulev2 = workspace 9, class:(Element)

# `pavucontrol` windowrule's
windowrule = float, pavucontrol

# `title:^(Logseq)$` windowrule's
windowrule = workspace special:logseq, title:^(Logseq)$
windowrule = animation popin, title:^(Logseq)$
windowrule = size 1403 898, title:^(Logseq)$
windowrule = move 8 39, title:^(Logseq)$
windowrule = float, title:^(Logseq)$

# `title:^(Picture-in-Picture)$` windowrule's
windowrule = float, title:^(Picture-in-Picture)$
windowrule = move 25%-, title:^(Picture-in-Picture)$
windowrule = size 960 540, title:^(Picture-in-Picture)$

# `wezterm` windowrule's
# windowrulev2 = active_opacity 0.7, inactive_opacity 0.8, class:(org.wezfurlong.wezterm)


# ## Window Rules

# `class:(re.sonny.Junction)` windowrulev2's
windowrulev2 = size 700 450, class:(re.sonny.Junction)
windowrulev2 = float, class:(re.sonny.Junction)
windowrulev2 = center 1, class:(re.sonny.Junction)

# `title:(ssh),class:(org.wezfurlong.wezterm)` windowrulev2's
windowrulev2 = bordercolor rgb(ff9e64), title:(ssh),class:(org.wezfurlong.wezterm)


# ## Extra Post
# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, hy3:movewindow
bindm = $mainMod, mouse:273, resizewindow

#-------------------------------------------#
# switch between current and last workspace #
#-------------------------------------------#
binds {
  workspace_back_and_forth = true
  allow_workspace_cycles = true
}

#---------------#
# function maps #
#---------------#
binde=$mainMod,F2, exec, brightnessctl set 5%-
binde=$mainMod,F3, exec, brightnessctl set +5%
binde=$mainMod,F6, exec, pactl set-sink-volume 0 -5%
binde=$mainMod,F7, exec, pactl set-sink-volume 0 +5%
bindr=$mainMod,XF86AudioMute, exec, pactl set-sink-mute 0 toggle
bind=$mainMod SHIFT, A, exec, pavucontrol
bind=$mainMod,XF86AudioNext, exec, playerctl next
bind=$mainMod,XF86AudioPlay, exec, playerctl play-pause
bind=$mainMod,XF86AudioPrev, exec, playerctl previous

#---------------#
# resize window #
#---------------#
bind=$mainMod,R,submap,resize
submap=resize
binde=,right,resizeactive,15 0
binde=,left,resizeactive,-15 0
binde=,up,resizeactive,0 -15
binde=,down,resizeactive,0 15
binde=,l,resizeactive,15 0
binde=,h,resizeactive,-15 0
binde=,k,resizeactive,0 -15
binde=,j,resizeactive,0 15
bind=,escape,submap,reset
submap=reset

# this is global + interferes with all usage of CTRL + SHIFT
# bind=CTRL SHIFT, left, resizeactive,-15 0
# bind=CTRL SHIFT, right, resizeactive,15 0
# bind=CTRL SHIFT, up, resizeactive,0 -15
# bind=CTRL SHIFT, down, resizeactive,0 15
# bind=CTRL SHIFT, l, resizeactive, 15 0
# bind=CTRL SHIFT, h, resizeactive,-15 0
# bind=CTRL SHIFT, k, resizeactive, 0 -15
# bind=CTRL SHIFT, j, resizeactive, 0 15

#---------------------------#
# system mode (on/off/lock) #
#---------------------------#
# bindl resets are required, or ESC is needed after resume
bind=$mainMod, 0, submap, mode_system
submap = mode_system

binde=, L, exec, swaylock -f
bindl=, L, submap, reset

binde=, S, exec, swaylock -f && systemctl suspend
bindl=, S, submap, reset

binde=, E, exec, hyprctl dispatch exit
bindl=, E, submap, reset

binde=, H, exec, systemctl hibernate
bindl=, H, submap, reset

binde=, SHIFT R, exec, systemctl reboot
binde=, SHIFT P, exec, systemctl poweroff

# exit system mode: "Enter" or "Escape"
bind=, escape, submap, reset
bind=, Return, submap, reset

# will reset the submap, meaning end the current one and return to the global one
submap=reset

# TODO: Add hyprlock

#----------#
# swayidle #
#----------#
# exec-once = swayidle -w timeout 300 'swaylock -f' timeout 300 'sleep 5; hyprctl dispatch dpms off' resume 'hyprctl dispatch dpms on' before-sleep 'swaylock -f'

# As per https://wiki.hyprland.org/Nvidia/
# To get multi monitor working
env = LIBVA_DRIVER_NAME,nvidia
env = XDG_SESSION_TYPE,wayland
# env = GBM_BACKEND,nvidia-drm  # crashes firefox
env = __GLX_VENDOR_LIBRARY_NAME,nvidia
env = WLR_NO_HARDWARE_CURSORS,1

# Make sure that hyprland runs on amdgpu
# To find out whch card is which, run `ls -l /dev/dri/by-path`
env = WLR_DRM_DEVICES,/dev/dri/card0:/dev/dri/card1  # Try amdgpu, otherwise NVIDIA
# env = WLR_DRM_DEVICES,/dev/dri/card0: # amdgpu only
